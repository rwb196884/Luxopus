import "date"
import "join"

b = from(bucket: "solar")
  |> range(start: 2023-04-23T00:00:00Z, stop: today())
  |> filter(fn: (r) => r["_measurement"] == "inverter" and r["_field"] == "batt_level")

bBefore = b
  |> filter(fn: (r) => date.hour(t: r._time) == 19)
  |> map(fn: (r) => ({
    _time: date.truncate(unit: 1d, t: r._time),
    _value: r._value
  }))
  |> group(columns: ["_time"])
  |> min()

bAfter = b
  |> filter(fn: (r) => date.hour(t: r._time) == 2)
  |> map(fn: (r) => ({
    _time: date.truncate(unit: 1d, t: r._time),
    _value: r._value
  }))
  |> group(columns: ["_time"])
  |> timeShift(duration: -1d)
  |> min()

j = join.time( left: bBefore, right: bAfter, as: (l, r) => ({
    _time: l._time,
    before: l._value,
    after: r._value,
    _value: l._value - r._value,
    weekDay: date.weekDay(t: l._time) // 0 is Sunday https://docs.influxdata.com/flux/v0.x/stdlib/date/weekday/
}))
  |> group(columns: ["weekDay"])
  |> filter(fn: (r) => r._value > 0)
  |> mean() // Lower quartile might be better

j |> yield(name: "daily-mean")

j |> group(columns: []) |> mean() |> yield(name: "mean")
