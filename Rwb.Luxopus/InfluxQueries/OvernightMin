import "date"

lastDay = (tables=<-) => (tables 
  |> map(fn: (r) => ({r with _value: date.truncate(t: r._time, unit: 1d)}))
  |> max()
  |> findColumn(fn: (key) => true, column: "_value")
  )[0]

priceData = from(bucket: "solar")
  |> range(start: today(), stop: date.add(d: 2d, to: today()))
  |> filter(fn: (r) => r["_measurement"] == "prices" and r["fuel"] == "electricity") 

t0 = priceData |> lastDay()
t1 = date.add(d: 7h, to: t0) // 7AM tomorrow

// Get data.
d = priceData
  |> range(start: t0, stop: t1)
  |> filter(fn: (r) =>  r["type"] == "buy") 
  |> min()  
  |> yield()
